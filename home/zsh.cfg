
setopt autocd nomatch notify interactive_comments inc_append_history 
unsetopt beep extendedglob share_history

# https://superuser.com/questions/476532/how-can-i-make-zshs-vi-mode-behave-more-like-bashs-vi-mode
vi-search-fix() {
	zle vi-cmd-mode
	zle .vi-history-search-backward
}
autoload vi-search-fix
zle -N vi-search-fix
bindkey -M viins '\e/' vi-search-fix

bindkey -v
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M vicmd V edit-command-line

autoload zmv

# set window title
# https://wiki.archlinux.org/title/zsh#xterm_title
autoload -Uz add-zsh-hook

function xterm_title_precmd () {
	print -Pn -- '\e]2;%n@%m:%~\a'
}

function xterm_title_preexec () {
	print -Pn -- '\e]2;%n@%m:%~ %# ' && print -n -- "${(q)1}\a"
}

if [[ "$TERM" != "linux" ]]; then
	add-zsh-hook -Uz precmd xterm_title_precmd
	add-zsh-hook -Uz preexec xterm_title_preexec
fi


autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

typeset -g -A key

# ANSI escape codes

key[Up]="^[[A"
key[Down]="^[[B"
key[Shift-Tab]="^[[Z"
key[Control-Left]="^[[1;5D"
key[Control-Right]="^[[1;5C"
key[Control-Backspace]="^H"
key[Control-Delete]="^[[3;5~"
key[Control-R]="^R"
key[Alt-Left]="^[[1;3D"
key[Alt-Right]="^[[1;3C"
key[Alt-Backspace]="^[^?"
key[Alt-Delete]="^[[3;3~"
key[Shift-Left]="^[[1;2D"
key[Shift-Right]="^[[1;2C"
key[Shift-Delete]="^[[3;2~"
key[Delete]="^[[3~"

# see zshzle

bindkey "${key[Up]}"                up-line-or-beginning-search
bindkey "${key[Down]}"              down-line-or-beginning-search
bindkey "${key[Shift-Tab]}"         reverse-menu-complete
# uses WORDCHARS
bindkey "${key[Control-Left]}"      backward-word
bindkey "${key[Control-Right]}"     forward-word
bindkey "${key[Control-Backspace]}" backward-kill-word
bindkey "${key[Control-Delete]}"    kill-word

bindkey "${key[Alt-Left]}"          vi-backward-word
bindkey "${key[Alt-Right]}"         vi-forward-word
bindkey "${key[Alt-Backspace]}"     vi-backward-kill-word
bindkey "${key[Alt-Delete]}"        kill-word

bindkey "${key[Shift-Left]}"        emacs-backward-word
bindkey "${key[Shift-Right]}"       emacs-forward-word
bindkey "${key[Shift-Delete]}"      kill-word

bindkey "${key[Delete]}"            delete-char

# https://github.com/spaceship-prompt/spaceship-prompt/issues/91#issuecomment-327996599
bindkey "^?" backward-delete-char

# https://unix.stackexchange.com/a/298844
b() ( yad --info --text "$(date '+%Y-%m-%d %H.%M.%S')\n$(pwd)" --width=150 & while true; do spd-say -t female1 -w "beep beep beep"; sleep 1; done; )

export FZF_TMUX=1
export FZF_TMUX_OPTS='-d50%' # fzf-tmux --help
export FZF_DEFAULT_COMMAND="find . -maxdepth 5 \( -path '*/.*' -prune \) -o -print"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="find . -maxdepth 5 \( -path '*/.*' -prune \) -o -type d -print"

if [ -n "${commands[fzf-share]}" ]; then
  source "$(fzf-share)/key-bindings.zsh"
  source "$(fzf-share)/completion.zsh"
fi

wait-ssh() {
	while ! timeout 1 ping $1 -c 1; do sleep 1; done; ssh $1
}

# use ledger bash completions
autoload bashcompinit
bashcompinit
if [ -f /run/current-system/sw/share/bash-completion/completions/ledger.bash ]; then
	source /run/current-system/sw/share/bash-completion/completions/ledger.bash
fi

eval $(opam env)
