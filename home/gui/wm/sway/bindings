
bindsym $mod+r exec  "pkill swaybar; swaybar --bar_id bar-0"
bindsym $mod+Shift+r exec "pkill swaybar; swaymsg reload"

bindsym $mod+q         exec dunstctl close
bindsym $mod+Shift+q   exec dunstctl action
bindsym $mod+Control+q exec dunstctl history-pop

bindsym $mod+Shift+v         exec clipman pick -t wofi -T-i
bindsym $mod+Control+v       exec wl-copy "$(clipman pick -t STDOUT | head -n 1)"
bindsym $mod+Shift+Control+v exec wtype "$(clipman pick -t STDOUT | head -n 1)"

set $mode_idle idle
mode "$mode_idle" {
	bindsym i exec $SCRIPT_DIR/swayidle_inhibit.sh;               mode "default"; exec notify-send "idle"
	bindsym d exec $SCRIPT_DIR/swayidle_dpms.sh;                  mode "default"; exec notify-send "dpms"
	bindsym l exec $SCRIPT_DIR/swayidle_lock.sh;                  mode "default"; exec notify-send "lock"
	bindsym s exec $SCRIPT_DIR/swayidle_suspend.sh;               mode "default"; exec notify-send "suspend"
	bindsym Shift+l exec $SCRIPT_DIR/swayidle_lock_no_dpms.sh;    mode "default"; exec notify-send "lock no dpms"

	bindsym Return mode "default"; exec notify-send "default"
	bindsym Escape mode "default"; exec notify-send "default"
}
bindsym $mod+u mode "$mode_idle"; exec notify-send "Idle i/d/l/s/L"

bindsym Print exec grim -g "$($SCRIPT_DIR/slurp_point.sh)" - | wl-copy
set $mode_capture capture
mode "$mode_capture" {
    bindsym q exec dunstctl close

	bindsym c exec grim -g "$($SCRIPT_DIR/slurp_point.sh)" - | wl-copy;     mode "default";
	bindsym e exec grim -g "$($SCRIPT_DIR/slurp_point.sh)" - | swappy -f -; mode "default;
	bindsym f exec grim -g "$($SCRIPT_DIR/slurp_point.sh)"\
		$XDG_PICTURES_DIR/"$(date '+%Y-%m-%d %H.%M.%S')".png;           mode "default";

	bindsym Shift+c exec grim - | wl-copy;     mode "default"; exec notify-send "copied"
	bindsym Shift+e exec grim - | swappy -f -; mode "default"; exec notify-send "saved"
	bindsym Shift+f exec grim $XDG_PICTURES_DIR/"$(date '+%Y-%m-%d %H.%M.%S')".png;\
		mode "default"; exec notify-send "saved to file"

	bindsym v exec wf-recorder\
		-a="$(pactl info | sed -En 's/Default Sink: (.*)/\1/p').monitor"\
		-o $(@wmmsg@ -t get_outputs | jq -r '.[] | select(.type=="output" and .focused).name')\
		-f $XDG_VIDEOS_DIR/"$(date '+%Y-%m-%d %H.%M')".mp4;\
		mode "default";

	bindsym Shift+v exec pkill -SIGINT wf-recorder; exec notify-send "stop recording"

	bindsym Return mode "default"; exec notify-send "default"
	bindsym Escape mode "default"; exec notify-send "default"
}
bindsym $mod+Print mode "$mode_capture"; exec notify-send "Capture (c)opy/(e)dit/(f)file c/e/f selection C/E/F output (v)ideo"
bindsym $mod+Shift+Print exec pkill -SIGINT wf-recorder; exec notify-send "stop recording"

# workaround for https://github.com/alacritty/alacritty/issues/2734
bindsym $mod+$alt+Return exec WAYLAND_DISPLAY= $term

# input from yad anywhere (allowing use of fctix)
# TODO get better bindings
bindsym $mod+$alt+space       exec yad --entry --text input | wl-copy
bindsym $mod+$alt+Shift+space exec yad --entry --text input | xargs wtype

set $mode_passthrough passthrough
mode "$mode_passthrough" {
    bindsym $mod+Delete mode "default"; exec notify-send "passthrough"
}
bindsym $mod+Delete mode "$mode_passthrough"; exec notify-send "passthrough"

# for when latop output is disabled on resume
bindsym $mod+Control+p output * enable; output * dpms on
bindsym $mod+Shift+p   exec @wmmsg@ output "$($SCRIPT_DIR/get_focused_output.sh)" disable
